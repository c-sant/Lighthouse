@model SensorViewModel

<div class="body-custom" style="height: 100%">

    <div type="hidden" id="div_id">@Model.Id</div>
    <div type="hidden" id="div_lat">@Model.Location.Latitude</div>
    <div type="hidden" id="div_long">@Model.Location.Longitude</div>
    <div type="hidden" id="div_range">@Model.Range</div>
 
    <div class="d-flex justify-content-center " style="height: 30em; color: black;">
        <div id="chart_div_temperature" style="width: 60%; height: 80%; background-color: white; margin-top: 3%;">

        </div>
    </div>

    <div class="d-flex justify-content-center " style="height: 30em; color: black;">
        <div id="chart_div_humidity" style="width: 60%; height: 80%; background-color: white; margin-top: 3%;">

        </div>
    </div>

    <div class="d-flex justify-content-center " style="height: 30em; color: black;">
        <div id="chart_div_rain_power" style="width: 60%; height: 80%; background-color: white; margin-top: 3%;">

        </div>
    </div>

    <div class="d-flex justify-content-center " style="height: 30em; color: black;">
        <div id="chart_div_occurrency" style="width: 60%; height: 80%; background-color: white; margin-top: 3%;">

        </div>
    </div>
   
</div>

<script type="text/javascript">
    
      // Configuração de dados para utilização da biblioteca
      google.charts.load('current', {'packages':['corechart']});
      google.charts.setOnLoadCallback(drawChart);
      google.charts.setOnLoadCallback(drawBars);
      //refreshData();

      

      async function drawChart() {
        var result = await refreshData()
        var list_temperature = [['Data/Hora', 'Temperatura'],['0', 0]]
        var list_humidity = [['Data/Hora', 'Umidade']]
        var list_rainPower = [['Data/Hora', 'Intensidade de Chuva']]
        // Criação de dados do DashBoard de Temperatura --------------------------
        var data_temperature = google.visualization.arrayToDataTable(list_temperature);

        var options_temperature = {
          title: 'Sensor Temperatura',
          hAxis: {title: 'Histórico do Sensor',  titleTextStyle: {color: '#333'}},
          vAxis: {minValue: 0},
          colors: ['red']
        };

        //------------------------------------------------------------------------

        // Criação de dados do DashBoard de Umidade ------------------------------
        var data_humidity = google.visualization.arrayToDataTable(list_humidity);

        var options_humidity = {
          title: 'Sensor Umidade',
          hAxis: {title: 'Histórico do Sensor',  titleTextStyle: {color: '#333'}},
          vAxis: {minValue: 0}
        };

        //------------------------------------------------------------------------
        
        // Criação de dados do DashBoard de Intensidade de Chuva -----------------
        var data_rainPower = google.visualization.arrayToDataTable(list_rainPower);

        var options_rainPower = {
          title: 'Sensor de chuva',
          hAxis: {title: 'Histórico de chuva',  titleTextStyle: {color: '#333'}},
          vAxis: {minValue: 0, maxValue:100},
          colors: ['#250a8f']
        };

        //------------------------------------------------------------------------

        // Criação dos DashBoards de fato ----------------------------------------
        var chart_temperature = new google.visualization.AreaChart(document.getElementById('chart_div_temperature'));
        chart_temperature.draw(data_temperature, options_temperature);

        var chart_humidity = new google.visualization.AreaChart(document.getElementById('chart_div_humidity'));
        chart_humidity.draw(data_humidity, options_humidity);

        var chart_rainPower  = new google.visualization.AreaChart(document.getElementById('chart_div_rain_power'));
        chart_rainPower.draw(data_rainPower , options_rainPower );

        //------------------------------------------------------------------------
        var count = 0;
        var lastIndex = result['1'].length
        setInterval(function(){
            if(count < lastIndex){
                count++;
                list_temperature.push([result['1'][count].dateReference, Number(result['1'][count].value)])
                list_humidity.push([result['2'][count].dateReference, Number(result['2'][count].value)])
                list_rainPower.push([result['3'][count].dateReference, Number(result['3'][count].value)])
            }
            
        }, 300000)
        setInterval(function() {
                data_temperature = google.visualization.arrayToDataTable(list_temperature);
                data_humidity =  google.visualization.arrayToDataTable(list_humidity);
                data_rainPower = google.visualization.arrayToDataTable(list_rainPower);
                chart_temperature.draw(data_temperature, options_temperature);
                chart_humidity.draw(data_humidity, options_humidity);
                chart_rainPower.draw(data_rainPower, options_rainPower);
            }, 300000);
      }

      function drawBars(){
           
          var data_occurency = google.visualization.arrayToDataTable([
              ["Mês", "N° de Ocorrências", { role: "style" } ],
              
          ]);

          var view_occurency = new google.visualization.DataView(data_occurency);
          view_occurency.setColumns([0, 1,
                           { calc: "stringify",
                             sourceColumn: 1,
                             type: "string",
                             role: "annotation" },
                           2]);

            var options_occurency = {
                title: "Histórico de ocorrências",
                bar: {groupWidth: "95%"},
                legend: { position: "none" },
            };

            var chart_occurency = new google.visualization.ColumnChart(document.getElementById("chart_div_occurrency"));
            chart_occurency.draw(view_occurency, options_occurency);
      }

      async function refreshData() {
        var id = document.getElementById('div_id').innerText;
        var dictSensors = {
        '1': [],
        '2' : [],
        '3' : []
        }

        console.log(id);
        var result = await $.ajax({
            url: "/DashBoard/GetData?sensorId=" + id,
            success: function (dado) {
                return dado;
            },
        });
        
        result.data.forEach(sensor => {
            dictSensors[sensor.attribute.id].push(sensor)
        });
        console.log(dictSensors);
        return dictSensors;
      }

      async function refreshOccurrencesData() {
          var lat = document.getElementById('div_lat').innerText;
          var long = document.getElementById('div_long').innerText;
          var range = document.getElementById('div_range').innerText;

          \
      }


      

      

    
</script>
